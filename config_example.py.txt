"""
Example config module.

Make your own config definition for each account used. This can be
any structure that can support a get(NAME) function. A module like
this, a dict or a class should be straight forward.

Note that all config values are mandatory. The API will crash otherwise.
"""
# --- Config Values ---
# These are mandatory attributes for the config object
#
# PSWIN_ENDPOINTS:
#   A list of endpoints for the service. If the request to the first
#   endpoint fails due to some http error, we continue down the list.
#
# PSWIN_USERNAME
#   Your pswin username
#
# PSWIN_PASSWORD
#   YOur pswin password

# --- Config as module ---
# file: myconfig.py

PSWIN_ENDPOINTS = ['https://xml.pswin.com', 'https://xml2.pswin.com']

# Client authentication
PSWIN_USERNAME = 'myusername'
PSWIN_PASSWORD = 'mypassword'

def get(name):
    """Make the config values accessible through get()"""
    if not name.startswith("PSWIN_"):
        raise AttributeError
    return globals().get(name)

# --- Config as dict ---

# dict example
PSWIN_CONFIG = {
    'PSWIN_ENDPOINTS': ['https://xml.pswin.com', 'https://xml2.pswin.com'],
    'PSWIN_USERNAME': 'myusername',
    'PSWIN_PASSWORD': 'mypassword',
}

# --- Config as Class ---

class PSWinConfig(object):
    """This is just used as a namespace to store values"""
    PSWIN_ENDPOINTS = ['https://xml.pswin.com', 'https://xml2.pswin.com']
    PSWIN_USERNAME = 'myusernamec'
    PSWIN_PASSWORD = 'mypasswordc'

    @classmethod
    def get(cls, name):
        """We create a custom get() class method
        to support then get() interface"""
        return getattr(cls, name)
